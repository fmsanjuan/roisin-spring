<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd 
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
<!-- 	<annotation-driven /> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Packages -->

	<beans:import resource="../packages.xml" />

	<!-- Tiles -->

	<beans:import resource="../tiles.xml" />

	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass">
			<beans:value>
				org.springframework.web.servlet.view.tiles2.TilesView
			</beans:value>
		</beans:property>
	</beans:bean>
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions" ref="tiles" />
	</beans:bean>

	<!-- i18n -->

	<beans:import resource="../i18n-l10n.xml" />

	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basenames" ref="messages" />
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>

	<beans:bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<beans:property name="defaultLocale" value="en" />
		<beans:property name="cookieName" value="myAppLocaleCookie"></beans:property>
		<beans:property name="cookieMaxAge" value="3600"></beans:property>
	</beans:bean>

	<interceptors>
		<beans:bean
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<beans:property name="paramName" value="locale" />
		</beans:bean>
	</interceptors>

	<!-- Data -->

	<beans:import resource="../data.xml" />

	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" mode="proxy" />

	<beans:bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<beans:property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="persistenceUnitName" ref="persistenceUnit" />
		<beans:property name="jpaProperties" ref="jpaProperties" />
	</beans:bean>

	<beans:bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<beans:property name="entityManagerFactory" ref="entityManagerFactory" />
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<beans:property name="databasePlatform" ref="sqlDialect" />
	</beans:bean>

	<beans:bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="openEntityManagerInViewInterceptor"
		class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor" />

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**/*.do" />
			<beans:ref bean="openEntityManagerInViewInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- Security -->

	<beans:import resource="../security.xml" />

	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="loginService">
			<security:password-encoder ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- Validator -->

	<beans:bean id="fileValidator" class="com.roisin.spring.validator.FileValidator" />
	
	<beans:bean id="preproSimpleFormValidator" class="com.roisin.spring.validator.PreproSimpleFormValidator" />
	
	<beans:bean id="ripperSettingsValidator" class="com.roisin.spring.validator.RipperSettingsValidator" />
	
	<beans:bean id="subgroupSettingsValidator" class="com.roisin.spring.validator.SubgroupSettingsValidator" />
	
	<beans:bean id="treeSettingsValidator" class="com.roisin.spring.validator.TreeSettingsValidator" />

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- Converter -->
	
	<mvc:annotation-driven conversion-service="conversionService" />

	<beans:import resource="../converters.xml" />

	<beans:bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<beans:property name="converters" ref="converters" />
	</beans:bean>

</beans:beans>
